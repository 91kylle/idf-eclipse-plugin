stages:
  - build
  - deploy
  - release_draft
  - release_submit

image: ${CI_DOCKER_REGISTRY}/esp32-ci-env

variables:
  ARCHIVE_DIR: "dist"
  ORIGIN_NAME: "com.espressif.idf.update-1.0.0-SNAPSHOT.zip"

before_script:
  # Use CI Tools
  - curl -sSL ${CIT_LOADER_URL} | sh
  - source citools/import_functions
  # Use an unique name for the archive
  - UNIQ_SUFFIX="g$(git describe --always --tags --dirty --abbrev=8)"
  - ARCHIVE_NAME=${ORIGIN_NAME/SNAPSHOT/$UNIQ_SUFFIX}

.add_gh_remote_key: &add_gh_remote_key |
  cit_add_ssh_key "${GH_SSH_KEY}"
  git remote remove gh || true
  git remote add gh ${GH_PUSH_REPO}

.release_tag_filter: &release_tag_filter
  only:
    - /^v[0-9].*$/

.release_submit_action: &release_submit_action
  when: manual
  allow_failure: true

build:
  stage: build
  image: jimador/docker-jdk-8-maven-node
  tags:
    - build_maven
  artifacts:
    paths:
      - ${ARCHIVE_DIR}/
    expire_in: 2 weeks
  variables:
    GIT_STRATEGY: fetch
  script:
    - export JARSIGNER_KEYSTORE_B64=${JARSIGNER_REL_KEYSTORE_B64:-${JARSIGNER_DEV_KEYSTORE_B64}}
    - export JARSIGNER_STOREPASS=${JARSIGNER_REL_STOREPASS:-${JARSIGNER_DEV_STOREPASS}}
    - export JARSIGNER_ALIAS=${JARSIGNER_REL_ALIAS:-${JARSIGNER_DEV_ALIAS}}
    - KEYSTORE_FILE="${PWD}/${JARSIGNER_KEYSTORE}"
    - printf "%s" "${JARSIGNER_KEYSTORE_B64}" | base64 -d --ignore-garbage - > "${KEYSTORE_FILE}"
    - mvn -e -X clean install -Djarsigner.keystore="${KEYSTORE_FILE}" -Djarsigner.alias="${JARSIGNER_ALIAS}" -Djarsigner.storepass="${JARSIGNER_STOREPASS}"
    - rm -v "${KEYSTORE_FILE}"
    - mkdir -p ${ARCHIVE_DIR}
    - mv -v releng/com.espressif.idf.update/target/${ORIGIN_NAME} ${ARCHIVE_DIR}/${ARCHIVE_NAME}
    - ls -l ${ARCHIVE_DIR}
